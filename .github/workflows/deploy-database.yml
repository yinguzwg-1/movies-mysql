name: 🚀 数据库部署

on:
  push:
    branches: [main, master]
    paths:
      - 'src/**'
      - '.github/workflows/deploy-database.yml'
      - '.env'
  workflow_dispatch:
    inputs:
      auto_execute:
        description: '是否自动执行部署'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
      output_file:
        description: '输出SQL文件路径（可选）'
        required: false
        default: ''

jobs:
  deploy-database:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # 设置整个job的超时时间
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v4

    - name: 🟢 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 安装依赖
      run: npm install

    - name: 🔍 检查部署配置
      run: |
        AUTO_EXECUTE="${{ github.event.inputs.auto_execute || 'true' }}"
        OUTPUT_FILE="${{ github.event.inputs.output_file || '' }}"
        
        echo "🚀 增量部署配置:"
        echo "📤 自动执行: $AUTO_EXECUTE"
        if [ -n "$OUTPUT_FILE" ]; then
          echo "📥 输出文件: $OUTPUT_FILE"
        fi

    - name: 🚀 准备服务器环境
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT || '22' }}
        command_timeout: "1200s"  # 20分钟
        script: |
          echo "🛠️ 开始准备服务器环境..."
          
          # 1. 确保MySQL可远程访问
          sudo mysql -e "CREATE USER IF NOT EXISTS 'deploy_user'@'%' IDENTIFIED WITH mysql_native_password BY '${{ secrets.DB_PASSWORD }}';"
          sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'deploy_user'@'%';"
          sudo mysql -e "FLUSH PRIVILEGES;"
          
          # 2. 修改MySQL配置
          sudo sed -i 's/^bind-address.*/bind-address = 0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf
          sudo sed -i '/^skip-networking/d' /etc/mysql/mysql.conf.d/mysqld.cnf
          
          # 3. 开放防火墙
          sudo ufw allow 3306/tcp || true
          sudo systemctl restart mysql
          
          # 4. 验证MySQL连接
          mysql -h 127.0.0.1 -u deploy_user -p'${{ secrets.DB_PASSWORD }}' -e "SELECT 1" || {
            echo "❌ MySQL本地连接测试失败";
            sudo tail -n 50 /var/log/mysql/error.log;
            exit 1;
          }

    - name: 📦 压缩项目文件
      run: |
        echo "🗜️ 压缩项目文件..."
        tar --exclude='./node_modules' -czvf deploy.tar.gz .
        ls -lh deploy.tar.gz

    - name: 📤 上传项目文件
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT || '22' }}
        source: "deploy.tar.gz"
        target: "/tmp/"
        overwrite: true

    - name: 🔄 执行增量部署
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT || '22' }}
        command_timeout: "1800s"  # 30分钟
        script: |
          set -e  # 任何错误立即退出
          echo "🔄 开始增量部署..."
          
          # 1. 解压项目文件
          cd /tmp
          tar -xzvf deploy.tar.gz
          
          # 2. 安装生产依赖（忽略devDependencies）
          npm install --production
          
          # 3. 加载环境变量
          export $(grep -v '^#' .env | xargs)
          
          # 4. 带重试机制的部署
          for attempt in {1..3}; do
            echo "🔄 尝试 $attempt/3..."
            if node src/incremental-deploy.js \
              --host "$DB_HOST" \
              --user "deploy_user" \
              --password "$DB_PASSWORD" \
              --database "$DB_NAME" \
              --port "$DB_PORT" \
              $([[ "${{ github.event.inputs.auto_execute }}" == "true" ]] && echo "--execute") \
              $([[ -n "${{ github.event.inputs.output_file }}" ]] && echo "-o ${{ github.event.inputs.output_file }}"); then
              echo "✅ 部署成功"
              break
            else
              echo "⚠️ 尝试 $attempt 失败"
              sleep 10
              if [ $attempt -eq 3 ]; then
                echo "❌ 所有重试均失败"
                exit 1
              fi
            fi
          done
          
          # 5. 验证部署结果
          echo "🔍 验证数据库变更..."
          mysql -h "$DB_HOST" -u deploy_user -p"$DB_PASSWORD" "$DB_NAME" -e "
            SELECT table_name, table_rows 
            FROM information_schema.tables 
            WHERE table_schema = '$DB_NAME'
            ORDER BY table_rows DESC;
          "

    - name: 🔄 重启应用服务
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT || '22' }}
        script: |
          echo "🔄 重启应用服务..."
          # 优雅重启PM2应用
          if command -v pm2 &> /dev/null; then
            pm2 reload all --update-env || pm2 restart all
          fi
          
          # 或者重启Docker容器
          if command -v docker &> /dev/null; then
            docker ps -q | xargs -I {} docker restart {} || true
          fi

    - name: 🧹 清理临时文件
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        key: ${{ secrets.ALIYUN_SSH_KEY }}
        port: ${{ secrets.ALIYUN_PORT || '22' }}
        script: |
          echo "🧹 清理临时文件..."
          rm -rf /tmp/deploy.tar.gz /tmp/node_modules
          echo "🆗 清理完成"